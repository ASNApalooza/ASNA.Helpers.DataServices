Using System
Using System.Data 
Using System.Collections.Generic 
Using System.Text
using DocumentFormat.OpenXml
Using DocumentFormat.OpenXml.Spreadsheet
Using ClosedXMl.Excel
Using ASNA.Helpers.DataServices
Using System.Diagnostics

DclNamespace ASNA.Helpers.DataServices

BegClass ToExcelAdapter Access(*Public) Implements(iQueryFileAdapter)  

    BegProp Result  Type(*Object) Implements(iQueryFileAdapter.Result) Access(*Public)
        BegGet
            LeaveSr wb
        EndGet
    EndProp 

    DclFLd args         Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs)
    DclFLd dt           Type(DataTable)
    DclFld wb           Type(XLWorkBook) New()
    DclFld ws           Type(iXLWorkSheet)
    DclFld sw           Type(StopWatch) New()
    DclFld CurrentRow   Type(*Integer4) 

    DclArray ColWidth    Type(*Integer4) Rank(1)

    DclConst HEADING_ROW Value(3)

    BegConstructor Access(*Public)
        DclSrParm args        Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs)

        *This.args = args
        sw.Start()
    EndConstructor 

    BegSr Header Implements(iQueryFileAdapter.Header) Access(*Public)
        DclSrParm dt Type(DataTable)

        DclFld Col  Type(*Integer4) 
        DclFld Row  Type(*Integer4)

        If (*This.dt = *Nothing)
            *This.dt = dt
            ColWidth = *New *Integer4[dt.Columns.Count]
        EndIf

        ws = wb.Worksheets.Add(Args.Inputs.Options["worksheetName"].ToString())
        ws.Cell(1,1).Value = Args.Inputs.Options["heading"].ToString()
        ws.Cell(1,1).Style.Font.Bold = *True 
        ws.Cell(1,1).Style.Font.SetFontSize(14) 

        Row = HEADING_ROW

        ForEach Field Type(*String) Collection(args.Inputs.FieldAliases) 
            ws.Cell(Row,Col+1).Style.Font.Bold = *True 
            ws.Cell(Row,Col+1).Style.Border.TopBorder = XLBorderStyleValues.Medium
            ws.Cell(Row,Col+1).Style.Border.BottomBorder = XLBorderStyleValues.Medium
            ws.Cell(Row,Col+1).Value = Field 
            Col += 1
        EndFor 

        CurrentRow = Row + 1 
    EndSr

    BegSr Row Implements(iQueryFileAdapter.Row) Access(*Public)
        DclSrParm dt Type(DataTable)

        DclFld   Col   Type(*Integer4) 
        DclFld   Row   Type(*Integer4) 

        Col = 1

        ForEach dr Type(DataRow) Collection(dt.Rows) 
            ForEach Column Type(DataColumn) Collection(dt.Columns) 
                If ( System.Array.IndexOf(Args.Inputs.Fields,Column.ColumnName.ToLower()) > -1) 
                    If (dr[Column.ColumnName].ToString().Trim().Length() > ColWidth[Col-1]) 
                        ColWidth[Col-1] = dr[Column.ColumnName].ToString().Trim().Length()
                    EndIf
                    If (Column.DataType.FullName = "System.String") 
                        ws.Cell(CurrentRow, Col).Style.Alignment.Horizontal = XLAlignmentHorizontalValues.Left 
                    EndIf 
                    If (Column.DataType.FullName = "System.Decimal") 
                        ws.Cell(CurrentRow, Col).Value = Convert.ToDecimal(dr[Column.ColumnName].ToString())
                    Else 
                        ws.Cell(CurrentRow, Col).Value = dr[Column.ColumnName].ToString()
                    EndIf 
                    Col += 1 
                EndIf
            EndFor        
            Col = 1
            CurrentRow += 1
        EndFor 

        dt.Clear()
    EndSr

    BegSr Footer Implements(iQueryFileAdapter.Footer) Access(*Public)
        DclSrParm dt Type(DataTable)

    EndSr

    BegSr Render Implements(iQueryFileAdapter.Render) Access(*Public)
        DclSrParm dt Type(DataTable)


        WriteDataTableRows(ws,dt)            
    EndSr

    BegSr SaveToLocalFile Access(*Public) 
        DclSrParm FullFileName Type(*String) 

        wb.SaveAs(FullFileName)
    EndSr

    BegSr WriteDataTableRows
        DclSrParm ws   Type(IXLWorkSheet) 
        DclSrParm dt   Type(DataTable) 

        DclFld x Type(*Integer4) 

        For Index(x = 0) To(dt.Columns.Count -1)
            If (ColWidth[x] > 0 ) 
                ws.Column(x+1).Width = ColWidth[x] + 5
            EndIf 
        EndFor 

        sw.Stop()
        CurrentRow += 1
        ws.Cell(CurrentRow, 1).Value = String.Format("Milliseconds: {0:#,###}",sw.ElapsedMilliseconds)
    EndSr
EndClass
