Using System
Using System.Text
Using System.Collections.Generic 

DclNamespace ASNA.Helpers.DataServices

BegClass QueryFileInstanceArgs Access(*Public)

    DclFld Inputs  Type(InputArgs)  Access(*Public) New()
    DclFld Outputs Type(OutputArgs) Access(*Public) New()
    DclFld Error   Type(ErrorInfo)  Access(*Public) New()

    BegClass OutputArgs Access(*Public) 
        DclFld ResultRowCount       Type(*Integer4) Access(*Public) 
        DclFld ResultColCount       Type(*Integer4) Access(*Public) 
        DclFld Milliseconds         Type(*Integer4) Access(*Public)
        DclFld StartingKeys         Type(List(*Of QueryField)) Access(*Public) New()
        DclFld EndingKeys           Type(List(*Of QueryField)) Access(*Public) New()      
        DclFld Query                Type(*String) Access(*Public)
        DclFld JsonError            Type(*String) Access(*Public) 
        DclFld QueryState           Type(*String) Access(*Public) 
        DclFld MoreRowsForward      Type(*Boolean) Access(*Public) 
        DclFld TotalRecordCount     Type(*Integer4) Access(*Public) 
        DclFld RecordCountPhrase    Type(*String) Access(*Public) 
    EndClass

    BegClass InputArgs Access(*Public) 
        DclFld Library      Type(*String) Access(*Public) 
        DclFld File         Type(*String) Access(*Public) 
        DclFld _FieldsList   Type(*String) 
            BegProp FieldsList   Type(*String) Access(*Public) 
                BegSet
                    _FieldsList = *PropVal 
                    InitializeFieldsList()
                EndSet
                BegGet
                    LeaveSr _FieldsList                
                EndGet
            EndProp
        DclFld Rows         Type(*Integer4) Access(*Public) 
        DclFld Query        Type(*String) Access(*Public) 
        DclFld QueryType    Type(ASNA.Helpers.DataServices.QueryType) Inz(ASNA.Helpers.DataServices.QueryType.Simple) Access(*Public) Attributes(Obsolete("Presence of Query property determines QueryType"))
        DclFld QueryParms   Type(List(*Of QueryField)) Access(*Public) New()
        DclArray Fields         Type(*String) Rank(1) Access(*Public)
        DclArray FieldAliases   Type(*String) Rank(1) Access(*Public)
        DclFld Options      Type(Dictionary(*of *String, *Object)) New() Access(*Public)
        DclFld OrderBy      Type(List(*Of QueryOrderByField)) Access(*Public) New()

        BegSr InitializeFieldsList 
            DclFld   i                  Type(*Integer4) 
            DclArray FieldNameTokens    Type(*String) Rank(1) 
            DclArray FieldsAsSpecified  Type(*String) Rank(1) 

            FieldsAsSpecified = DataGateAPI.ParseCommaDelimitedStringIntoArray(*This.FieldsList)

            *This.Fields = *New *String[FieldsAsSpecified.Length]
            *This.FieldAliases = *New *String[FieldsAsSpecified.Length]

            i = 0
            ForEach Field Type(*String) Collection(FieldsAsSpecified) 
                FieldNameTokens = DataGateAPI.GetFieldNameTokens(Field) 
                Fields[i] = FieldNameTokens[0].ToLower()
                FieldAliases[i] = FieldNameTokens[1]
                i += 1
            EndFor 
        EndSr    

        BegFunc GetCorrespondingFieldAlias Type(*String) Access(*Public) 
            DclSrParm FieldName Type(*String) 

            DclFLd i Type(*Integer4) 

            i = System.Array.IndexOf(*This.Fields,FieldName.ToLower())
            If ( i > -1 )
                LeaveSr *This.FieldAliases[i]
            Else
                LeaveSr FieldName
            EndIf 
        EndFunc 

        BegFunc GetCorrespondingField Type(*String) Access(*Public) 
            DclSrParm FieldNameAlias Type(*String) 

            DclFLd i Type(*Integer4) 

            i = System.Array.IndexOf(*This.FieldAliases,FieldNameAlias)
            If ( i > -1 )
                LeaveSr *This.Fields[i]
            Else
                LeaveSr FieldNameAlias
            EndIf 
        EndFunc 
    EndClass     

    BegClass ErrorInfo Access(*Public)
        DclFld ErrorMessage    Type(*String) Access(*Public) 
        DclFld ErrorNumber     Type(*String) Access(*Public) 
        DclFld SystemError     Type(*String) Access(*Public) 
        DclFld StackTrace      Type(*String) Access(*Public) 
        DclFld ErrorException  Type(System.Exception) Access(*Public) 
    EndClass
EndClass
