Using System
Using System.Text
Using System.Collections.Generic
Using Microsoft.VisualStudio.TestTools.UnitTesting
Using System.IO 
Using ASNA.DataGate.Client
Using NewtonSoft.Json
Using System.Diagnostics

// Set reference to Microsoft.VisualStudio.QualityTools.UnitTestFramework

// DclNamespace DataServicesTests

// Project template location:
// "C:\Users\Roger\Documents\Visual Studio 2012\My Exported Templates\AVR unit test project.zip"

BegClass Tests Access(*Public) Attributes(TestClass())

     //DclConst DBName Value("*Public/CYPRESS") 
    DclConst DBName Value("*Public/DG NET Local") 

    DclFld db       Type(AdgConnection) Shared(*Yes)
    BegSr OpenDB Access(*Public) Attributes(ClassInitialize()) Shared(*Yes)
        DclSrParm context Type(TestContext)

        Tests.db = *New AdgConnection(DBName) 
        Tests.db.Open()

        // Give the connection time to spin up. 
       Sleep 10000
    EndSr

    BegSr CloseDB Access(*Public) Attributes(ClassCleanup()) Shared(*Yes)
      Tests.db.Close()
    EndSr

//    BegSr AnotherTest Attributes(TestMethod()) Access(*Public)
//        Sleep 5000
//    EndSr
    
    BegSr CustomersWithSimpleQuerySecond Attributes(TestMethod()) Access(*Public)
        DclFld Parms    Type(Dictionary(*Of *String,*String)) New()
        DclFld DGList   Type(ASNA.Helpers.DataServices.QueryFile)
        DclFld json     Type(*String)
        DclFld Result   Type(*Boolean) 
        
        DclFld args     Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs) New()

        args.Library   = "examples"
        args.File      = "CmastNewL1"
        args.Fields    = "CMCUSTNO,CMNAME,CMADDR1,CMCITY,CMSTATE,CMPOSTCODE"
        args.Rows      = 12
        args.QueryType = ASNA.Helpers.DataServices.QueryType.Paged
        args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("CMCUSTNO",0))
        //args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("CMNAME","Carl Cranke"))

        DGList = *New ASNA.Helpers.DataServices.QueryFile(Tests.db,args)
        DGList.IndentJson = *True
       
        Result = DGList.GetList()
        json = DGList.ListAsJson        
        File.WriteAllText("c:\users\roger\documents\testing\CustomersWithSimpleQuerySecond.json",json)
        
        If (Result) 
            // Success.
        Else 
            // An error occurred.
        EndIf
        Assert.IsTrue(Result)  
        Assert.AreEqual(DGList.ResultRowCount,Convert.ToInt32(12))
    EndSr 

     
     BegSr CustomersWithSimpleQueryFirst Attributes(TestMethod()) Access(*Public)
        DclFld Parms    Type(Dictionary(*Of *String,*String)) New()
        DclFld DGList   Type(ASNA.Helpers.DataServices.QueryFile)
        DclFld json     Type(*String)
        DclFld Result   Type(*Boolean) 
        
        DclFld args     Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs) New()

        args.Library   = "examples"
        args.File      = "CmastNewL2"
        args.Fields    = "CMCUSTNO,CMNAME"
        args.Rows      = 12
        args.QueryType = ASNA.Helpers.DataServices.QueryType.Paged
        args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("CMNAME","A"))
        args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("CMCUSTNO",0))

        DGList = *New ASNA.Helpers.DataServices.QueryFile(Tests.db,args)
        DGList.IndentJson = *True
       
        Result = DGList.GetList()

        json = DGList.ListAsJson
        json = json.Replace("\r\n",Environment.NewLine) 
        File.WriteAllText("c:\users\roger\documents\testing\CustomersWithSimpleQueryFirst.json",json)

        If (Result) 
            // Success.
        Else 
            // An error occurred.
        EndIf
        Assert.IsTrue(Result)  
        Assert.AreEqual(DGList.ListAsDataTable.Columns.Count, Convert.ToInt32(2)) 
        Assert.AreEqual(DGList.ResultRowCount,Convert.ToInt32(12))
    EndSr 

   
    BegSr TestDataServiceCountyByArgObject Attributes(TestMethod()) Access(*Public)
        DclFld DGList   Type(ASNA.Helpers.DataServices.QueryFile)
        DclFld Result   Type(*Boolean)

        DclFld args     Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs) New()
        DclFld Json     Type(*String)

        args.library  = "devo"
        args.file     = "county"
        args.fields   = "STATE:value,COUNTY:label"
        args.rows     = -1
        args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("STATE","TX"))
        args.QueryFields.add(*New ASNA.Helpers.DataServices.QueryField("COUNTY","A"))
        //args.QueryType = ASNA.Helpers.DataServices.QueryType.Simple
        args.Query     = "STATE = '{STATE}' AND COUNTY >= '{COUNTY}'" 

        DGList = *New ASNA.Helpers.DataServices.QueryFile(Tests.db,args)
        DGList.IndentJson = *True

        Result = DGList.GetList()
        json = DGList.ListAsJson
        File.WriteAllText("c:\users\roger\documents\testing\TestDataServiceCountyByArgObject.json",json)

        If (Result) 
            // Success.
        Else 
            // An error occurred.
        EndIf
        Assert.IsTrue(Result)  
        // There are 254 counties in Texas.
        Assert.AreEqual(DGList.ResultRowCount,Convert.ToInt32(254))
    EndSr 

    BegSr TestCustomerForAutoComplete Attributes(TestMethod()) Access(*Public)
        DclFld DGList   Type(ASNA.Helpers.DataServices.QueryFile)
        DclFld Result   Type(*Boolean)

        DclFld args     Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs) New()
        DclFld Json     Type(*String)

        args.library  = "examples"
        args.file     = "cmastnewl2"
        args.fields   = "cmname:label,cmcustno:value"
        args.rows     = 12
        args.QueryFields.Add(*New ASNA.Helpers.DataServices.QueryField("CMNAME","Smi"))
        args.QueryType = ASNA.Helpers.DataServices.QueryType.Simple
        args.Query     = "CMNAME >= '{CMNAME}'" 

        DGList = *New ASNA.Helpers.DataServices.QueryFile(Tests.db,args)
        DGList.IndentJson = *True

        Result = DGList.GetList()
        json = DGList.ListAsJson
        File.WriteAllText("c:\users\roger\documents\testing\TestCustomerForAutoComplete.json",json)

        //db.Close() 

        If (Result) 
            // Success.
        Else 
            // An error occurred.
        EndIf
        Assert.IsTrue(Result)  
        Assert.AreEqual(DGList.ResultRowCount,Convert.ToInt32(12))
    EndSr 

    BegSr DeserializeJson Attributes(TestMethod()) Access(*Public)

        // Json created with these lines:
        //   Json = JsonConvert.SerializeObject(args)
        //   File.WriteAllText("c:\users\roger\documents\testing\args.json",json)
        DclFld Json Type(*String) 

        Json = File.ReadAllText("c:\users\roger\documents\testing\args.json") 

        DclFld args Type(ASNA.Helpers.DataServices.QueryFileInstanceArgs) New()

        // Note: That New() isn't sloppy! args must be instanced for the DeserializationObject method to work. 
        args = JsonConvert.DeserializeObject(Json, args.GetType()) *As ASNA.Helpers.DataServices.QueryFileInstanceArgs
    EndSr


EndClass
